heart$ExerciseAngina <- as.factor(heart$ExerciseAngina)
heart$ST_Slope <- as.factor(heart$ST_Slope)
heart$HeartDisease <- as.numeric(heart$HeartDisease)
summary(heart)
str(heart)
qqnorm(heart$Sex)
qqnorm(as.character(heart$Sex))
as.character(heart$Sex)
qqnorm(as.character(heart$Sex))
qqnorm(heart$Sex)
qqnorm(heart$Age)
qqline(heart$Age)
shapiro.test(heart$Age)
lille.test(heart$Age)
lillie.test(heart$Age)
library(nortest)
install.packages(nortest)
install.packages("nortest")
library(nortest)
lillie.test(heart$Age)
str(heart)
qqnorm(heart$RestingBP)
qqline(heart$RestingBP)
shapiro.test(heart$RestingBP)
qqnorm(heart$Cholesterol)
qqline(heart$Cholesterol)
table(heart$FastingBS)
Age_nor <- (2*(heart$Age-min(heart$Age))/(max(heart$Age)-min(heart$Age)))-1
heart <- cbind(heart,Age_nor)
str(heart)
qqnorm(heart$MaxHR)
qqline(heart$MaxHR)
shapiro.test(heart$MaxHR)
lillie.test(heart$MaxHR)
qqnorm(heart$Oldpeak)
qqline(heart$Oldpeak)
qqnorm(heart$Age_nor)
qqline(heart$Age_nor)
shapiro.test(heart$Age_nor)
lillie.test(heart$Age_nor)
lillie.test(heart$Age)
heart$Cholesterol[heart$Sex=="M"]
colHom <- heart$Cholesterol[heart$Sex=="M"]
colMuj <- heart$Cholesterol[heart$Sex=="F"]
var.test(colHom,colMuj)
t.test( colHom, colMuj, var.equal=FALSE, alternative = "greater")
t.test( colMuj,colHom , var.equal=FALSE, alternative = "greater")
var.test(colMuj, colHom)
heart$HeartDisease[heart$Sex=="M" & heart$HeartDisease=="1"]
carHom <- heart$HeartDisease[heart$Sex=="M" & heart$HeartDisease=="1"]
carMuj <- heart$HeartDisease[heart$Sex=="F" & heart$HeartDisease=="1"]
var.test(carHom, carMuj)
var.test(carMuj,carHom)
heart$HeartDisease[heart$Sex=="F" & heart$HeartDisease=="1"]
heart$HeartDisease[heart$Sex=="M" & heart$HeartDisease=="1"]
carHom <- heart$FastingBS[heart$Sex=="M" & heart$HeartDisease=="1"]
carMuj <- heart$FastingBS[heart$Sex=="F" & heart$HeartDisease=="1"]
var.test(carMuj,carHom)
var.test(carHom,carMuj)
var.test(carMuj,carHom)
t.test( carHom,carMuj , var.equal=TRUE, alternative = "greater")
t.test( carMuj,carHom , var.equal=TRUE, alternative = "greater")
t.test( carHom,carMuj , var.equal=TRUE, alternative = "greater")
cor(heart,method="pearson")
heart
heart$ChestPainType <- as.numeric(heart$ChestPainType)
heart$ChestPainType
heart <- read.csv("heart.csv",sep=",")
heart$Age <- as.numeric(heart$Age)
heart$Sex <- as.factor(heart$Sex)
heart$ChestPainType <- as.factor(heart$ChestPainType)
heart$RestingBP <- as.numeric(heart$RestingBP)
heart$Cholesterol <- as.numeric(heart$Cholesterol)
heart$FastingBS <- as.numeric(heart$FastingBS)
heart$RestingECG  <- as.factor(heart$RestingECG)
heart$MaxHR <- as.numeric(heart$MaxHR)
heart$ExerciseAngina <- as.factor(heart$ExerciseAngina)
heart$ST_Slope <- as.factor(heart$ST_Slope)
heart$HeartDisease <- as.numeric(heart$HeartDisease)
summary(heart)
heart_num <-heart
heart_num <-heart
heart_num$Sex <- as.numeric(heart_num$Sex)
heart_num$ChestPainType <- as.numeric(heart_num$ChestPainType)
heart_num$RestingECG <- as.numeric(heart_num$RestingECG)
heart_num$ExerciseAngina <- as.numeric(heart_num$ExerciseAngina)
heart_num$ST_Slope <- as.numeric(heart_num$ST_Slope)
summary(heart_num)
cor(heart,method="pearson")
cor(heart_num,method="pearson")
corPlot(heart_num,method="pearson")
library(psych)
corPlot(heart_num,method="pearson")
heart <- read.csv("heart.csv",sep=",")
heart$Age <- as.numeric(heart$Age)
heart$Sex <- as.factor(heart$Sex)
heart$ChestPainType <- as.factor(heart$ChestPainType)
heart$RestingBP <- as.numeric(heart$RestingBP)
heart$Cholesterol <- as.numeric(heart$Cholesterol)
heart$FastingBS <- as.numeric(heart$FastingBS)
heart$RestingECG  <- as.factor(heart$RestingECG)
heart$MaxHR <- as.numeric(heart$MaxHR)
heart$ExerciseAngina <- as.factor(heart$ExerciseAngina)
heart$ST_Slope <- as.factor(heart$ST_Slope)
heart$HeartDisease <- as.numeric(heart$HeartDisease)
Age_nor <- (2*(heart$Age-min(heart$Age))/(max(heart$Age)-min(heart$Age)))-1
heart <- cbind(heart,Age_nor)
Age_dist <- cut(heart$Age, breaks = c(0,40,60,80), labels = c("(0-40]","(40,60]","(60,80]"))
heart <- cbind(heart,Age_dist)
heart
heart[1:12]
corPlot(heart_num, scale = FALSE)
Corelacion <- cor(heart_num)
Corelacion
library(psych)
corPlot(Corelacion, scale = FALSE)
library(psych)
corrplot(Corelacion, scale = FALSE)
if (!require('corrplot')) install.packages('corrplot'); library('corrplot')
corrplot(Corelacion, scale = FALSE)
if (!require('corrplot')) install.packages('corrplot'); library('corrplot')
corrplot(Corelacion, method = "number")
lm(Cholesterol~Age,data=heart)
model <- lm(Cholesterol~Age,data=heart)
summary(model)
summarY(heart)
summarY(heart)
summary(heart)
summary(lm(Cholesterol~RestingBP,data=heart))
summary(lm(Cholesterol~ChestPainType,data=heart))
summary(lm(Cholesterol~MaxHR,data=heart))
summary(lm(MaxHR~Age_nor,data=heart))
summary(lm(Cholesterol~Age_nor,data=heart))
summary(lm(MaxHR~Age_nor,data=heart))
summary(lm(HeartDisease~ST_Slope,data=heart))
summary(lm(HeartDisease~ST_Slope+oldpeak,data=heart))
summary(lm(HeartDisease~ST_Slope+Oldpeak,data=heart))
summary(lm(HeartDisease~ST_Slope+Oldpeak+MaxHR,data=heart))
summary(lm(MaxHR~ST_Slope+Oldpeak,data=heart))
summary(lm(MaxHR~ST_Slope+Oldpeak+HeartDisease,data=heart))
summary(lm(MaxHR~ST_Slope+Oldpeak+HeartDisease+ChestPainType,data=heart))
summary(lm(MaxHR~ST_Slope+Oldpeak+HeartDisease+ChestPainType+RestingECG,data=heart))
summary(lm(MaxHR~ST_Slope+Oldpeak+HeartDisease+ChestPainType+RestingECG+Cholesterol,data=heart))
summary(lm(Cholesterol~ST_Slope+Oldpeak+HeartDisease+ChestPainType+RestingECG+MaxHR,data=heart))
summary(lm(Cholesterol~ST_Slope+Oldpeak+HeartDisease+ChestPainType+RestingECG+MaxHR+fASTINGbs,data=heart))
summary(lm(Cholesterol~ST_Slope+Oldpeak+HeartDisease+ChestPainType+RestingECG+MaxHR+FastingBS,data=heart))
summary(lm(MaxHR~ST_Slope+Oldpeak+HeartDisease+ChestPainType+RestingECG+MaxHR+FastingBS,data=heart))
summary(lm(MaxHR~ST_Slope+Oldpeak+HeartDisease+ChestPainType+RestingECG+FastingBS,data=heart))
summary(lm(HeartDisease~MaxHR+ST_Slope+Oldpeak++ChestPainType+RestingECG+FastingBS,data=heart))
glm(formula=HeartDisease~ST_Slope,data=heart,family=binomial())
summary(glm(formula=HeartDisease~ST_Slope,data=heart,family=binomial()))
summary(glm(formula=HeartDisease~ST_Slope+Oldpeak,data=heart,family=binomial()))
summary(glm(formula=HeartDisease~ST_Slope+Oldpeak+MaxHR,data=heart,family=binomial()))
summary(glm(formula=HeartDisease~ST_Slope+Oldpeak+MaxH+ChestPainType,data=heart,family=binomial()))
summary(glm(formula=HeartDisease~ST_Slope+Oldpeak+MaxHR+ChestPainType,data=heart,family=binomial()))
summary(glm(formula=HeartDisease~ST_Slope+Oldpeak+MaxHR+ChestPainType+Age,data=heart,family=binomial()))
summary(glm(formula=HeartDisease~ST_Slope+Oldpeak+MaxHR+ChestPainType+Age_dist,data=heart,family=binomial()))
summary(glm(formula=HeartDisease~ST_Slope+Oldpeak+MaxHR+ChestPainType+Age_nor,data=heart,family=binomial()))
summary(glm(formula=HeartDisease~ST_Slope+Oldpeak+MaxHR+ChestPainType+RestingBP,data=heart,family=binomial()))
glm(formula=HeartDisease~ChestPainType,data=heart,family=binomial())
summary(glm(formula=HeartDisease~ChestPainType,data=heart,family=binomial()))
model_logis1 <- glm(formula=HeartDisease~ChestPainType,data=heart,family=binomial())
summary(model_logis1)
hoslem.test(heart$HeartDisease,fitted(model_logis1))
if (!require('ResourceSelection')) install.packages('ResourceSelection'); library('ResourceSelection')
hoslem.test(heart$HeartDisease,fitted(model_logis1))
model_logis1 <- glm(formula=HeartDisease~MaxHR,data=heart,family=binomial())
summary(model_logis1)
hoslem.test(heart$HeartDisease,fitted(model_logis1))
model_logis2 <- glm(formula=HeartDisease~ST_Slope+Oldpeak+MaxHR+ChestPainType+RestingBP+Age_nor,data=heart,family=binomial())
summary(model_logis2)
hoslem.test(heart$HeartDisease,fitted(model_logis2))
summary(lm(MaxHR~Age_nor,data=heart))
summary(lm(Cholesterol~Age_nor,data=heart))
summary(lm(FastingBS~Age_nor,data=heart))
summary(lm(MaxHR~Cholesterolr,data=heart))
summary(lm(MaxHR~Cholesterol,data=heart))
summary(lm(MaxHR~Age,data=heart))
summary(lm(MaxHR~Age+HeartDisease+ST_Slope+FastingBS,data=heart))
summary(lm(MaxHR~Age+HeartDisease+ST_Slope+FastingBS+Oldpeak,data=heart))
summary(lm(MaxHR~Age+HeartDisease+ST_Slope+Oldpeak,data=heart))
summary(lm(MaxHR~Age+HeartDisease+ST_Slope+FastingBS+Oldpeak+RestingECG,data=heart))
summary(lm(MaxHR~Age+HeartDisease+ST_Slope+FastingBS+Oldpeak+RestingECG+Sex,data=heart))
summary(lm(MaxHR~Age+HeartDisease+ST_Slope+FastingBS+Oldpeak+RestingECG+Sex+Cholesterol,data=heart))
Model_reg_sim <- lm(MaxHR~Age,data=heart)
summary(Model_reg_sim)
Model_reg_mul <- lm(MaxHR~Age+HeartDisease+ST_Slope+FastingBS+Oldpeak+RestingECG+Sex+Cholesterol,data=heart)
summary(Model_reg_mul)
modelo_trials <- C50::C5.0(trainx, trainy, trials = 10, rules = TRUE)
heart <- read.csv("heart.csv",sep=",")
prcomp(heart, center = TRUE, scale = TRUE)
str(heart)
prcomp(heart, scale = TRUE)
rescale(Adult$Age,c(-1,1))
as.numeric(Adult$Sex)
as.numeric(heart$Sex)
heart
prcomp(heart[,c(1,4:6,7,8,10)], scale = TRUE)
prcomp(heart[,c(1,4:6,7,10)], scale = TRUE)
prcomp(heart[,c(1,4:6)], scale = TRUE)
prcomp(heart[,c(1,7,8,10)], scale = TRUE)
prcomp(heart[,c(1,4:6,8,10)], scale = TRUE)
prcomp(heart[,c(1,4:6,7,8,10)], scale = TRUE)
summary(heart)
str(heart)
prcomp(heart[,c(1,4:6,7,8,10)], scale = TRUE)
prcomp(heart[,c(1,4:6,8,10)], scale = TRUE)
str(heart)
prcomp(heart[,c(1,4:6,7,8,10,12)], scale = TRUE)
prcomp(heart[,c(1,4:6,7,8,10,11)], scale = TRUE)
prcomp(heart[,c(1,4:6,7,8,10,12)], scale = TRUE)
prcomp(heart[,c(1,4:6,7,8,10,12)], scale = TRUE)
prcomp(heart[,c(1,4:6,7,8,10)], scale = TRUE)
prcomp(heart[,c(1,4:6,7,8,10)], scale = TRUE)
prcomp(heart[,c(1,4:6,8,10,12)], scale = TRUE)
str(heart)
plot(pca, type="l")
pca = prcomp(heart[,c(1,4:6,8,10,12)], scale = TRUE)
plot(pca, type="l")
summary(pca)
plot_prcomp(absent_work, variance_cap = 0.8, maxcat = 50L,
prcomp_args = list(scale. = TRUE), geom_label_args = list(),
title = NULL, ggtheme = theme_light(), theme_config = list(),
nrow = 2L, ncol = 2L, parallel = FALSE)
plot_prcomp(heart[,c(1,4:6,8,10,12)], variance_cap = 0.8, maxcat = 50L,
prcomp_args = list(scale. = TRUE), geom_label_args = list(),
title = NULL, ggtheme = theme_light(), theme_config = list(),
nrow = 2L, ncol = 2L, parallel = FALSE)
library("factoextra")
fviz_pca_var(pca,
col.var = "contrib", # color en funcón de la contribución.
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE
)
library("factoextra")
install.packages("factoextra")
library("factoextra")
fviz_pca_var(pca,
col.var = "contrib", # color en funcón de la contribución.
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE
)
plot_prcomp(heart, variance_cap = 0.8, maxcat = 50L,
prcomp_args = list(scale. = TRUE), geom_label_args = list(),
title = NULL, ggtheme = theme_light(), theme_config = list(),
nrow = 2L, ncol = 2L, parallel = FALSE)
as.numeric("klkl")
is.numeric("klkl")
str(heart)
heart_num <- heart
heart_num$Sex <- with(df2, ifelse(edad_discretizada == "M", 0,1))))
heart_num$Sex <- with(df2, ifelse(edad_discretizada == "M", 0,1))
heart_num$Sex <- with(heart_num, ifelse(edad_discretizada == "M", 0,1))
heart_num$Sex <- with(heart_num, ifelse(Sex == "M", 0,1))
str(heart_num)
heart$ChestPainType
table(heart$ChestPainType)
heart_num$ChestPainType <- with(heart_num, ifelse(ChestPainType == "ASY",0,ifelse(ChestPainType == "ATA",1,ifelse(ChestPainType == "NAP",2,3))))
str(heart)
str(heart_num)
table(heart_num$RestingECG)
heart$RestingECG <- with(heart_num, ifelse(RestingECG == "LVH",0,ifelse(RestingECG == "Normal",1,2)))
str(heart_num)
str(heart_num)
heart <- read.csv("heart.csv",sep=",")
heart_num <- heart
heart_num$Sex <- with(heart_num, ifelse(Sex == "M", 0,1))
heart_num$ChestPainType <- with(heart_num, ifelse(ChestPainType == "ASY",0,ifelse(ChestPainType == "ATA",1,ifelse(ChestPainType == "NAP",2,3))))
heart_num$RestingECG <- with(heart_num, ifelse(RestingECG == "LVH",0,ifelse(RestingECG == "Normal",1,2)))
str(heart_num)
table(heart_num$ExerciseAngina)
heart_num$ExerciseAngina <- with(heart_num, ifelse(ExerciseAngina == "N", 0,1))
str(heart_num)
table(heart_num$ST_Slope)
heart_num$ST_Slope <- with(heart_num, ifelse(ST_Slope == "Down", 0,ifelse(ST_Slope == "Flat",1,2)))
fviz_contrib(pca, addlabels = TRUE, choice = "var", axes = 1, top = 20)
ggplot(heart, aes(RestingBP, Age, colour = HeartDisease)) +
geom_point()+ ggtitle("AÑADIR TITULO GRÁFICO")
heart <- read.csv("heart.csv",sep=",")
str(heart)
summary(heart)
heart$Age <- as.numeric(heart$Age)
heart$Sex <- as.factor(heart$Sex)
heart$ChestPainType <- as.factor(heart$ChestPainType)
heart$RestingBP <- as.numeric(heart$RestingBP)
heart$Cholesterol <- as.numeric(heart$Cholesterol)
heart$FastingBS <- as.numeric(heart$FastingBS)
heart$RestingECG  <- as.factor(heart$RestingECG)
heart$MaxHR <- as.numeric(heart$MaxHR)
heart$ExerciseAngina <- as.factor(heart$ExerciseAngina)
heart$ST_Slope <- as.factor(heart$ST_Slope)
heart$HeartDisease <- as.numeric(heart$HeartDisease)
boxplot(heart$Age,main="Edad del paciente")
boxplot.stats(heart$Age)$out
boxplot(heart$RestingBP,main="Presión arterial en reposo")
boxplot.stats(heart$RestingBP)$out
boxplot(heart$Cholesterol,main="Colesterol")
boxplot.stats(heart$Cholesterol)$out
boxplot(heart$MaxHR,main="Frecuencia cardíaca máxima alcanzada")
boxplot.stats(heart$MaxHR)$out
posMaxHR <- which(heart$MaxHR==60 | heart$MaxHR==63)
heart$MaxHR[posMaxHR] <- NA
library(VIM)
MaxHR_new <- kNN(heart,variable="MaxHR",dist_var =c("Age","Sex","ChestPainType","FastingBS","RestingECG","ExerciseAngina","ST_Slope","HeartDisease"),k=3)
MaxHR_new <- MaxHR_new$MaxHR
heart$MaxHR <- MaxHR_new
heart$MaxHR[posMaxHR]
colSums(is.na(heart))
colSums(heart == 0)
posRestingBP <- which(heart$RestingBP == 0)
posCholesterol <- which(heart$Cholesterol == 0)
heart$RestingBP[posRestingBP] <- NA
heart$Cholesterol[posCholesterol] <- NA
RestingBP_new <- kNN(heart,variable="RestingBP",dist_var =c("Age","Sex","ChestPainType","FastingBS","RestingECG","ExerciseAngina","ST_Slope","HeartDisease"),k=3)
RestingBP_new <- RestingBP_new$RestingBP
heart$RestingBP <- RestingBP_new
Cholesterol_new <- kNN(heart,variable="Cholesterol",dist_var =c("Age","Sex","ChestPainType","FastingBS","RestingECG","ExerciseAngina","ST_Slope","HeartDisease"),k=3)
Cholesterol_new <- Cholesterol_new$Cholesterol
heart$Cholesterol <- Cholesterol_new
heart$RestingBP[posRestingBP]
heart$Cholesterol[posCholesterol]
colSums(is.na(heart))
heart_num <- heart
heart_num$Sex <- with(heart_num, ifelse(Sex == "M", 0,1))
heart_num$ChestPainType <- with(heart_num, ifelse(ChestPainType == "ASY",0,ifelse(ChestPainType == "ATA",1,ifelse(ChestPainType == "NAP",2,3))))
heart_num$RestingECG <- with(heart_num, ifelse(RestingECG == "LVH",0,ifelse(RestingECG == "Normal",1,2)))
heart_num$ExerciseAngina <- with(heart_num, ifelse(ExerciseAngina == "N", 0,1))
heart_num$ST_Slope <- with(heart_num, ifelse(ST_Slope == "Down", 0,ifelse(ST_Slope == "Flat",1,2)))
pca = prcomp(heart_num, scale = TRUE)
plot(pca, type="l")
summary(pca)
library("factoextra")
fviz_contrib(pca, addlabels = TRUE, choice = "var", axes = 1, top = 20)
library("factoextra")
fviz_pca_var(pca,
col.var = "contrib", # color en funcón de la contribución.
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE
)
biplot(pca, scale = 0, cex = 0.5, col = c("lightblue", "red"))
Age_nor <- (2*(heart$Age-min(heart$Age))/(max(heart$Age)-min(heart$Age)))-1
heart <- cbind(heart,Age_nor)
min(heart$Age_nor)
max(heart$Age_nor)
Age_dist <- cut(heart$Age, breaks = c(0,40,60,80), labels = c("(0-40]","(40,60]","(60,80]"))
heart <- cbind(heart,Age_dist)
summary(heart)
qqnorm(heart$Age)
qqline(heart$Age)
shapiro.test(heart$Age)
library(nortest)
lillie.test(heart$Age)
qqnorm(heart$RestingBP)
qqline(heart$RestingBP)
qqnorm(heart$Cholesterol)
qqline(heart$Cholesterol)
qqnorm(heart$MaxHR)
qqline(heart$MaxHR)
shapiro.test(heart$MaxHR)
lillie.test(heart$MaxHR)
qqnorm(heart$Oldpeak)
qqline(heart$Oldpeak)
qqnorm(heart$Age_nor)
qqline(heart$Age_nor)
shapiro.test(heart$Age_nor)
lillie.test(heart$Age_nor)
colHom <- heart$Cholesterol[heart$Sex=="M"]
colMuj <- heart$Cholesterol[heart$Sex=="F"]
var.test(colMuj, colHom)
alfa <- 1-0.95
n1 <- length(colMuj)
n2 <- length(colHom)
s1 <- sd(colMuj)
s2 <- sd(colHom)
mean1 <- mean(colMuj)
mean2 <- mean(colHom)
tobs <- (mean1-mean2) / (sqrt(s1^2/n1 + s2^2/n2))
df <- ((s1^2/n1 + s2^2/n2)^2) / ((s1^2/n1)^2/(n1-1) + (s2^2/n2)^2/(n2-1))
tcritU <- qt(alfa,df,lower.tail = FALSE)
pvalue <-pt( tobs,df, lower.tail=FALSE)
paste("Estadistico de contraste: ",tobs)
paste("Valor crítico: ",tcritU)
paste("Valor p: ",pvalue)
paste("Valor de df: ",df)
t.test( colMuj,colHom , var.equal=FALSE, alternative = "greater")
carHom <- heart$FastingBS[heart$Sex=="M" & heart$HeartDisease=="1"]
carMuj <- heart$FastingBS[heart$Sex=="F" & heart$HeartDisease=="1"]
var.test(carHom,carMuj)
alfa <- 1-0.95
n1 <- length(carHom)
n2 <- length(carMuj)
s1 <- sd(carHom)
s2 <- sd(carMuj)
mean1 <- mean(carHom)
mean2 <- mean(carMuj)
df <- ((s1^2/n1 + s2^2/n2)^2) / ((s1^2/n1)^2/(n1-1) + (s2^2/n2)^2/(n2-1))
S <- sqrt( ( (n1-1)*s1^2 + (n2-1)*s2^2 ) / (n1+n2-2) )
tobs <- (mean1-mean2) / (S * sqrt(1/n1 + 1/n2))
tcritL <- qt( alfa/2, n1+n2-2)
tcritU <- qt( 1-alfa/2, n1+n2-2)
pvalue <-pt( abs(tobs), df=n1+n2-2, lower.tail=FALSE)
paste("Estadistico de contraste: ",tobs)
paste("Valor crítico: ",tcritU)
paste("Valor p: ",pvalue)
paste("Valor de df: ",df)
t.test( carHom,carMuj , var.equal=FALSE, alternative = "greater")
heart_num <-heart[1:12]
heart_num$Sex <- as.numeric(heart_num$Sex)
heart_num$ChestPainType <- as.numeric(heart_num$ChestPainType)
heart_num$RestingECG <- as.numeric(heart_num$RestingECG)
heart_num$ExerciseAngina <- as.numeric(heart_num$ExerciseAngina)
heart_num$ST_Slope <- as.numeric(heart_num$ST_Slope)
Corelacion <- cor(heart_num,method="pearson")
Corelacion
if (!require('corrplot')) install.packages('corrplot'); library('corrplot')
corrplot(Corelacion, method = "number")
Model_reg_sim <- lm(MaxHR~Age,data=heart)
summary(Model_reg_sim)
Model_reg_mul <- lm(MaxHR~Age+HeartDisease+ST_Slope+FastingBS+Oldpeak+RestingECG+Sex+Cholesterol,data=heart)
summary(Model_reg_mul)
model_logis1 <- glm(formula=HeartDisease~MaxHR,data=heart,family=binomial())
summary(model_logis1)
if (!require('ResourceSelection')) install.packages('ResourceSelection'); library('ResourceSelection')
hoslem.test(heart$HeartDisease,fitted(model_logis1))
model_logis2 <- glm(formula=HeartDisease~ST_Slope+Oldpeak+MaxHR+ChestPainType+RestingBP+Age_nor,data=heart,family=binomial())
summary(model_logis2)
hoslem.test(heart$HeartDisease,fitted(model_logis2))
head(heart)
set.seed(1)
heart_clasification <- heart[sample(nrow(heart)),]
set.seed(666)
y <- heart_clasification[,12]
X <- heart_clasification[,1:11]
split_prop <- 3
indexes = sample(1:nrow( heart_clasification), size=floor(((split_prop-1)/split_prop)*nrow(heart_clasification)))
trainx<-X[indexes,]
trainy<-y[indexes]
testx<-X[-indexes,]
testy<-y[-indexes]
if(!require(ggplot2)){
install.packages('ggplot2', repos='http://cran.us.r-project.org')
library(ggplot2)
}
if(!require(ggpubr)){
install.packages('ggpubr', repos='http://cran.us.r-project.org')
library(ggpubr)
}
if(!require(grid)){
install.packages('grid', repos='http://cran.us.r-project.org')
library(grid)
}
if(!require(gridExtra)){
install.packages('gridExtra', repos='http://cran.us.r-project.org')
library(gridExtra)
}
if(!require(C50)){
install.packages('C50', repos='http://cran.us.r-project.org')
library(C50)
}
library("rpart")
library("rpart.plot")
if(!require(C50)){
install.packages('C50', repos='http://cran.us.r-project.org')
library(C50)
}
trainy = as.factor(trainy)
modelo_clasificacion_C50 <- C50::C5.0(trainx, trainy,rules=TRUE,control = C5.0Control(noGlobalPruning = FALSE) )
summary(modelo_clasificacion_C50)
predicted_model <- predict( modelo_clasificacion_C50, testx, type="class" )
print(sprintf("La precisión del modelo es: %.4f %%",100*sum(predicted_model == testy) / length(predicted_model)))
modelo_clasificacion_rpart <- rpart(formula = trainy ~ ., data = trainx, method = "class" )
summary(modelo_clasificacion_rpart)
rpart.plot(modelo_clasificacion_rpart, type=2,extra = 2, under = TRUE, faclen=5,cex=.55)
rpart.plot(modelo_clasificacion_rpart, type=2,extra = 8, under = TRUE, faclen=5,cex=.55)
predicted_model <- predict( modelo_clasificacion_rpart, testx, type="class" )
print(sprintf("La precisión del modelo4 es: %.4f %%",100*sum(predicted_model == testy) / length(predicted_model)))
mat_conf<-table(testy,Predicted=predicted_model)
mat_conf
if(!require(gmodels)){
install.packages('gmodels', repos='http://cran.us.r-project.org')
library(gmodels)
}
CrossTable(testy, predicted_model,prop.chisq  = FALSE, prop.c = FALSE, prop.r =FALSE,dnn = c('Reality', 'Prediction'))
modelo_trials <- C50::C5.0(trainx, trainy, trials = 10, rules = TRUE)
predicted_model <- predict( modelo_trials, testx, type="class" )
mat_conf<-table(testy,Predicted=predicted_model)
porcentaje_correct<-100 * sum(diag(mat_conf)) / sum(mat_conf)
print(sprintf("El %% de registros correctamente clasificados es: %.4f %%",porcentaje_correct))
CrossTable(testy, predicted_model,prop.chisq  = FALSE, prop.c = FALSE, prop.r =FALSE,dnn = c('Reality', 'Prediction'))
head(heart)
library(ggplot2)
ggplot(data=heart,aes(x=Age_dist,fill=(factor(HeartDisease))))+geom_bar() + ggtitle("Enfermedad Cardiaca por grupo de edad(G1)") + labs(x="Edad", colour= "HeartDisease")
ggplot(data=heart,aes(x=Sex,fill=factor(HeartDisease)))+geom_bar() + ggtitle("Enfermedad Cardiaca por sexo(G2)") + labs(x="sexo", colour= "HeartDisease")
ggplot(data=heart,aes(x=ChestPainType,fill=factor(HeartDisease)))+geom_bar() + ggtitle("Enfermedad Cardiaca por ChestPainType(G3)") + labs(x="ChestPainType", colour= "HeartDisease")
ggplot(data=heart,aes(x=RestingECG,fill=factor(HeartDisease)))+geom_bar() + ggtitle("Enfermedad Cardiaca por RestingECG(G4)") + labs(x="RestingECG", colour= "HeartDisease")
# ExerciseAngina & HeartDisease
ggplot(data=heart,aes(x=ExerciseAngina,fill=factor(HeartDisease)))+geom_bar() + ggtitle("Enfermedad Cardiaca por ExerciseAngina(G5)") + labs(x="ExerciseAngina", colour= "HeartDisease")
# ST_Slope & HeartDisease
ggplot(data=heart,aes(x=ST_Slope,fill=factor(HeartDisease)))+geom_bar() + ggtitle("Enfermedad Cardiaca por ST_Slope(G6)") + labs(x="ST_Slope", colour= "HeartDisease")
# FastingBS & HeartDisease
ggplot(data=heart,aes(x=FastingBS,fill=factor(HeartDisease)))+geom_bar() + ggtitle("Enfermedad Cardiaca por FastingBS(G7)") + labs(x="FastingBS", colour= "HeartDisease")
# Coresterol & Sexo
ggplot(heart, aes(x =heart$Age, y = heart$Cholesterol)) + geom_point()+
geom_smooth(method = "loess")
ggplot(heart, aes(RestingBP, Age, colour = HeartDisease)) +
geom_point()+ ggtitle("AÑADIR TITULO GRÁFICO")
ggplot(heart, aes(Cholesterol, Age, colour = HeartDisease)) +
geom_point()+ ggtitle("AÑADIR TITULO GRÁFICO")
ggplot(heart, aes(MaxHR, Age, colour = HeartDisease)) +
geom_point() + ggtitle("AÑADIR TITULO GRÁFICO")
ggplot(heart, aes(Oldpeak, Age, colour = HeartDisease)) +
geom_point() + ggtitle("AÑADIR TITULO GRÁFICO")
